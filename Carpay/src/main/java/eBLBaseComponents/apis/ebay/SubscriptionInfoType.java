/**
 * SubscriptionInfoType.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.
 */

package eBLBaseComponents.apis.ebay;


/**
 * SubscriptionInfoType 
 * 				Information about a PayPal Subscription.
 */
public class SubscriptionInfoType  implements java.io.Serializable {
    /* ID generated by PayPal for the subscriber. 
     * Character length and limitations: no limit */
    private java.lang.String subscriptionID;

    /* Subscription start date */
    private java.util.Calendar subscriptionDate;

    /* Date when the subscription modification will be effective */
    private java.util.Calendar effectiveDate;

    /* Date PayPal will retry a failed subscription payment */
    private java.util.Calendar retryTime;

    /* Username generated by PayPal and given to subscriber to access
     * the subscription. 
     * Character length and limitations: 64 alphanumeric single-byte characters */
    private java.lang.String username;

    /* Password generated by PayPal and given to subscriber to access
     * the subscription. For security, the value of the password is hashed.
     * 
     * Character length and limitations: 128 alphanumeric single-byte characters */
    private java.lang.String password;

    /* The number of payment installments that will occur at the regular
     * rate. 
     * Character length and limitations: no limit */
    private java.lang.String recurrences;

    /* Subscription duration and charges */
    private eBLBaseComponents.apis.ebay.SubscriptionTermsType[] terms;

    private java.lang.String reattempt;  // attribute

    private java.lang.String recurring;  // attribute

    public SubscriptionInfoType() {
    }

    public SubscriptionInfoType(
           java.lang.String subscriptionID,
           java.util.Calendar subscriptionDate,
           java.util.Calendar effectiveDate,
           java.util.Calendar retryTime,
           java.lang.String username,
           java.lang.String password,
           java.lang.String recurrences,
           eBLBaseComponents.apis.ebay.SubscriptionTermsType[] terms,
           java.lang.String reattempt,
           java.lang.String recurring) {
           this.subscriptionID = subscriptionID;
           this.subscriptionDate = subscriptionDate;
           this.effectiveDate = effectiveDate;
           this.retryTime = retryTime;
           this.username = username;
           this.password = password;
           this.recurrences = recurrences;
           this.terms = terms;
           this.reattempt = reattempt;
           this.recurring = recurring;
    }


    /**
     * Gets the subscriptionID value for this SubscriptionInfoType.
     * 
     * @return subscriptionID   * ID generated by PayPal for the subscriber. 
     * Character length and limitations: no limit
     */
    public java.lang.String getSubscriptionID() {
        return subscriptionID;
    }


    /**
     * Sets the subscriptionID value for this SubscriptionInfoType.
     * 
     * @param subscriptionID   * ID generated by PayPal for the subscriber. 
     * Character length and limitations: no limit
     */
    public void setSubscriptionID(java.lang.String subscriptionID) {
        this.subscriptionID = subscriptionID;
    }


    /**
     * Gets the subscriptionDate value for this SubscriptionInfoType.
     * 
     * @return subscriptionDate   * Subscription start date
     */
    public java.util.Calendar getSubscriptionDate() {
        return subscriptionDate;
    }


    /**
     * Sets the subscriptionDate value for this SubscriptionInfoType.
     * 
     * @param subscriptionDate   * Subscription start date
     */
    public void setSubscriptionDate(java.util.Calendar subscriptionDate) {
        this.subscriptionDate = subscriptionDate;
    }


    /**
     * Gets the effectiveDate value for this SubscriptionInfoType.
     * 
     * @return effectiveDate   * Date when the subscription modification will be effective
     */
    public java.util.Calendar getEffectiveDate() {
        return effectiveDate;
    }


    /**
     * Sets the effectiveDate value for this SubscriptionInfoType.
     * 
     * @param effectiveDate   * Date when the subscription modification will be effective
     */
    public void setEffectiveDate(java.util.Calendar effectiveDate) {
        this.effectiveDate = effectiveDate;
    }


    /**
     * Gets the retryTime value for this SubscriptionInfoType.
     * 
     * @return retryTime   * Date PayPal will retry a failed subscription payment
     */
    public java.util.Calendar getRetryTime() {
        return retryTime;
    }


    /**
     * Sets the retryTime value for this SubscriptionInfoType.
     * 
     * @param retryTime   * Date PayPal will retry a failed subscription payment
     */
    public void setRetryTime(java.util.Calendar retryTime) {
        this.retryTime = retryTime;
    }


    /**
     * Gets the username value for this SubscriptionInfoType.
     * 
     * @return username   * Username generated by PayPal and given to subscriber to access
     * the subscription. 
     * Character length and limitations: 64 alphanumeric single-byte characters
     */
    public java.lang.String getUsername() {
        return username;
    }


    /**
     * Sets the username value for this SubscriptionInfoType.
     * 
     * @param username   * Username generated by PayPal and given to subscriber to access
     * the subscription. 
     * Character length and limitations: 64 alphanumeric single-byte characters
     */
    public void setUsername(java.lang.String username) {
        this.username = username;
    }


    /**
     * Gets the password value for this SubscriptionInfoType.
     * 
     * @return password   * Password generated by PayPal and given to subscriber to access
     * the subscription. For security, the value of the password is hashed.
     * 
     * Character length and limitations: 128 alphanumeric single-byte characters
     */
    public java.lang.String getPassword() {
        return password;
    }


    /**
     * Sets the password value for this SubscriptionInfoType.
     * 
     * @param password   * Password generated by PayPal and given to subscriber to access
     * the subscription. For security, the value of the password is hashed.
     * 
     * Character length and limitations: 128 alphanumeric single-byte characters
     */
    public void setPassword(java.lang.String password) {
        this.password = password;
    }


    /**
     * Gets the recurrences value for this SubscriptionInfoType.
     * 
     * @return recurrences   * The number of payment installments that will occur at the regular
     * rate. 
     * Character length and limitations: no limit
     */
    public java.lang.String getRecurrences() {
        return recurrences;
    }


    /**
     * Sets the recurrences value for this SubscriptionInfoType.
     * 
     * @param recurrences   * The number of payment installments that will occur at the regular
     * rate. 
     * Character length and limitations: no limit
     */
    public void setRecurrences(java.lang.String recurrences) {
        this.recurrences = recurrences;
    }


    /**
     * Gets the terms value for this SubscriptionInfoType.
     * 
     * @return terms   * Subscription duration and charges
     */
    public eBLBaseComponents.apis.ebay.SubscriptionTermsType[] getTerms() {
        return terms;
    }


    /**
     * Sets the terms value for this SubscriptionInfoType.
     * 
     * @param terms   * Subscription duration and charges
     */
    public void setTerms(eBLBaseComponents.apis.ebay.SubscriptionTermsType[] terms) {
        this.terms = terms;
    }

    public eBLBaseComponents.apis.ebay.SubscriptionTermsType getTerms(int i) {
        return this.terms[i];
    }

    public void setTerms(int i, eBLBaseComponents.apis.ebay.SubscriptionTermsType _value) {
        this.terms[i] = _value;
    }


    /**
     * Gets the reattempt value for this SubscriptionInfoType.
     * 
     * @return reattempt
     */
    public java.lang.String getReattempt() {
        return reattempt;
    }


    /**
     * Sets the reattempt value for this SubscriptionInfoType.
     * 
     * @param reattempt
     */
    public void setReattempt(java.lang.String reattempt) {
        this.reattempt = reattempt;
    }


    /**
     * Gets the recurring value for this SubscriptionInfoType.
     * 
     * @return recurring
     */
    public java.lang.String getRecurring() {
        return recurring;
    }


    /**
     * Sets the recurring value for this SubscriptionInfoType.
     * 
     * @param recurring
     */
    public void setRecurring(java.lang.String recurring) {
        this.recurring = recurring;
    }

    private java.lang.Object __equalsCalc = null;
    public synchronized boolean equals(java.lang.Object obj) {
        if (!(obj instanceof SubscriptionInfoType)) return false;
        SubscriptionInfoType other = (SubscriptionInfoType) obj;
        if (obj == null) return false;
        if (this == obj) return true;
        if (__equalsCalc != null) {
            return (__equalsCalc == obj);
        }
        __equalsCalc = obj;
        boolean _equals;
        _equals = true && 
            ((this.subscriptionID==null && other.getSubscriptionID()==null) || 
             (this.subscriptionID!=null &&
              this.subscriptionID.equals(other.getSubscriptionID()))) &&
            ((this.subscriptionDate==null && other.getSubscriptionDate()==null) || 
             (this.subscriptionDate!=null &&
              this.subscriptionDate.equals(other.getSubscriptionDate()))) &&
            ((this.effectiveDate==null && other.getEffectiveDate()==null) || 
             (this.effectiveDate!=null &&
              this.effectiveDate.equals(other.getEffectiveDate()))) &&
            ((this.retryTime==null && other.getRetryTime()==null) || 
             (this.retryTime!=null &&
              this.retryTime.equals(other.getRetryTime()))) &&
            ((this.username==null && other.getUsername()==null) || 
             (this.username!=null &&
              this.username.equals(other.getUsername()))) &&
            ((this.password==null && other.getPassword()==null) || 
             (this.password!=null &&
              this.password.equals(other.getPassword()))) &&
            ((this.recurrences==null && other.getRecurrences()==null) || 
             (this.recurrences!=null &&
              this.recurrences.equals(other.getRecurrences()))) &&
            ((this.terms==null && other.getTerms()==null) || 
             (this.terms!=null &&
              java.util.Arrays.equals(this.terms, other.getTerms()))) &&
            ((this.reattempt==null && other.getReattempt()==null) || 
             (this.reattempt!=null &&
              this.reattempt.equals(other.getReattempt()))) &&
            ((this.recurring==null && other.getRecurring()==null) || 
             (this.recurring!=null &&
              this.recurring.equals(other.getRecurring())));
        __equalsCalc = null;
        return _equals;
    }

    private boolean __hashCodeCalc = false;
    public synchronized int hashCode() {
        if (__hashCodeCalc) {
            return 0;
        }
        __hashCodeCalc = true;
        int _hashCode = 1;
        if (getSubscriptionID() != null) {
            _hashCode += getSubscriptionID().hashCode();
        }
        if (getSubscriptionDate() != null) {
            _hashCode += getSubscriptionDate().hashCode();
        }
        if (getEffectiveDate() != null) {
            _hashCode += getEffectiveDate().hashCode();
        }
        if (getRetryTime() != null) {
            _hashCode += getRetryTime().hashCode();
        }
        if (getUsername() != null) {
            _hashCode += getUsername().hashCode();
        }
        if (getPassword() != null) {
            _hashCode += getPassword().hashCode();
        }
        if (getRecurrences() != null) {
            _hashCode += getRecurrences().hashCode();
        }
        if (getTerms() != null) {
            for (int i=0;
                 i<java.lang.reflect.Array.getLength(getTerms());
                 i++) {
                java.lang.Object obj = java.lang.reflect.Array.get(getTerms(), i);
                if (obj != null &&
                    !obj.getClass().isArray()) {
                    _hashCode += obj.hashCode();
                }
            }
        }
        if (getReattempt() != null) {
            _hashCode += getReattempt().hashCode();
        }
        if (getRecurring() != null) {
            _hashCode += getRecurring().hashCode();
        }
        __hashCodeCalc = false;
        return _hashCode;
    }

    // Type metadata
    private static org.apache.axis.description.TypeDesc typeDesc =
        new org.apache.axis.description.TypeDesc(SubscriptionInfoType.class, true);

    static {
        typeDesc.setXmlType(new javax.xml.namespace.QName("urn:ebay:apis:eBLBaseComponents", "SubscriptionInfoType"));
        org.apache.axis.description.AttributeDesc attrField = new org.apache.axis.description.AttributeDesc();
        attrField.setFieldName("reattempt");
        attrField.setXmlName(new javax.xml.namespace.QName("", "reattempt"));
        attrField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"));
        typeDesc.addFieldDesc(attrField);
        attrField = new org.apache.axis.description.AttributeDesc();
        attrField.setFieldName("recurring");
        attrField.setXmlName(new javax.xml.namespace.QName("", "recurring"));
        attrField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"));
        typeDesc.addFieldDesc(attrField);
        org.apache.axis.description.ElementDesc elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("subscriptionID");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:ebay:apis:eBLBaseComponents", "SubscriptionID"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"));
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("subscriptionDate");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:ebay:apis:eBLBaseComponents", "SubscriptionDate"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "dateTime"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("effectiveDate");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:ebay:apis:eBLBaseComponents", "EffectiveDate"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "dateTime"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("retryTime");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:ebay:apis:eBLBaseComponents", "RetryTime"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "dateTime"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("username");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:ebay:apis:eBLBaseComponents", "Username"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("password");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:ebay:apis:eBLBaseComponents", "Password"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("recurrences");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:ebay:apis:eBLBaseComponents", "Recurrences"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("terms");
        elemField.setXmlName(new javax.xml.namespace.QName("urn:ebay:apis:eBLBaseComponents", "Terms"));
        elemField.setXmlType(new javax.xml.namespace.QName("urn:ebay:apis:eBLBaseComponents", "SubscriptionTermsType"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        elemField.setMaxOccursUnbounded(true);
        typeDesc.addFieldDesc(elemField);
    }

    /**
     * Return type metadata object
     */
    public static org.apache.axis.description.TypeDesc getTypeDesc() {
        return typeDesc;
    }

    /**
     * Get Custom Serializer
     */
    public static org.apache.axis.encoding.Serializer getSerializer(
           java.lang.String mechType, 
           java.lang.Class _javaType,  
           javax.xml.namespace.QName _xmlType) {
        return 
          new  org.apache.axis.encoding.ser.BeanSerializer(
            _javaType, _xmlType, typeDesc);
    }

    /**
     * Get Custom Deserializer
     */
    public static org.apache.axis.encoding.Deserializer getDeserializer(
           java.lang.String mechType, 
           java.lang.Class _javaType,  
           javax.xml.namespace.QName _xmlType) {
        return 
          new  org.apache.axis.encoding.ser.BeanDeserializer(
            _javaType, _xmlType, typeDesc);
    }

}
